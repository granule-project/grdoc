import File
import GrParsec

data Entry = Entry
  String -- id
  String -- type signature
  String -- documentation

-- Conver a list of characters into a primitive string
toString : List Char -> String
toString Empty = "";
toString (Next x xs) = stringCons x (toString xs)

-- Parsers any sequence into a string
str : Parser String
str = (many [mkMoveable anyChar])
  `andThen` [\xs -> return (toString xs)]

-- Parse Granule comments
comment : Parser String
comment =
            (char ['-'])
  `andThen` [\c -> let () = drop @Char c in (char ['-'])
  `andThen` [\c -> let () = drop @Char c in str]]

parse : String -> List Entry
parse = parse

entriesToHTML : List Entry -> String
entriesToHTML = entriesToHTML

-- Entry point
main : () <{Stdin, Open, IOExcept, Read, Write, Close}>
main =
  let
   fileName <- fromStdin;
   [fileName] <- pure (moveString fileName);
   fileData <- readFile fileName;
   entries  <- pure (parse fileData)
  in
   writeFile (fileName `stringAppend` ".html") (entriesToHTML entries)